// 'lets give essential actors long-ass names'
actor proj : BasicProjectile { states { end: TNT1 A 0
		stop} }
actor watcher : BasicWatcher { scale 2.5 states { end: TNT1 A 0
	stop} }
actor gfx : BasicGraphicEffect { states { end: TNT1 A 0
	stop} }
actor item : CustomInventory {}
actor var : Inventory { inventory.amount 1 inventory.maxamount 0xFFFFFFFF +INVENTORY.UNDROPPABLE }
actor varBool : var { inventory.maxamount 1 }
actor var16 : var { inventory.maxamount 0xFFFF }
actor var8 : var { inventory.maxamount 0xFF }

actor xwColliderGFX : gfx { // only stops on sectors collisions
	-NOINTERACTION +THRUACTORS +THRUGHOST +NOBLOCKMONST } 

actor flagFrightenedOn : item { states { pickup: TNT1 A 0 A_ChangeFlag("FRIGHTENED", true) stop}}
actor flagFrightenedOff : item { states { pickup: TNT1 A 0 A_ChangeFlag("FRIGHTENED", false) stop}}

actor noInteractionOn : item { states { pickup: TNT1 A 0 A_ChangeFlag("NOINTERACTION", true) stop}}
actor noInteractionOff : CustomInventory { states { pickup: TNT1 A 0 A_ChangeFlag("NOINTERACTION", false)
		TNT1 A 0 A_ChangeFlag("NOBLOCKMAP", false) stop}} 


actor "XW CS Frame" : gfx { // BasicClientSideFrame
	renderstyle "translucent" alpha 0.5 mass 0
	states {
		spawnFrame: TNT1 A 0
			TNT1 A 0 A_JumpIf(true, "sprite")
		sprite: // inheriting actor uses this state
			TNT1 A 0
			goto clientSideCheck
		clientSideCheck:
			"----" A 0 A_JumpIf(CallACS("XW CS", XW_CS_POV, mass), "clientSidePOV")
			"----" A 0 A_Jump(256, "otherPOV")
			goto otherPOV
		otherPOV:
			"----" A 0 A_FadeIn(1.0)
			"----" A 0 A_Jump(256, "clientSidePOV")
			goto clientSidePOV
		clientSidePOV:	
			"----" A 1
			stop}}
			

// uses the given ScaleX (with SXF_TRANSFERSCALE) detecting clientsiding
// summoned by a server-sided actor
actor "XW CS Frame TID" : "XW CS Frame" {
	states { 
		spawnFrame: TNT1 A 0
			TNT1 A 0 A_SetMass(scalex)
			TNT1 A 0 A_SetScale(2.5)
			goto super::spawnFrame}}

			
actor "Xover Monster Speed" : item {
	states { pickup: TNT1 A 0 ACS_NamedExecuteWithResult("XW", 38) stop}}
actor "XW Mob Frozen Stack" : var16 {}
actor "XW Speed" : varBool {}


// timer for the Locker script 
actor TotalLockCount : var16 { }


// on PvM map start, used to discern new joiners from players which already joined last map
// Also used by some Xover Weps to behave differently in PvM
actor "XW PvM" : varBool { +INVENTORY.UNDROPPABLE }

// for atomic operations only
actor "XW Data" : var16 { } 
actor "XW TID Data" : var16 { }
actor "XW Speed Data" : var16 { }
actor "XW X Data" : var16 { }
actor "XW Y Data" : var16 { }
actor "XW Z Data" : var16 { }

actor "XW Mob Speed" : varBool {}

// A ray casted-like projo used for sector collision detection
actor "XW Ray Cast" : FastProjectile {
	radius 3 height 3 PROJECTILE speed 1000 damage (0)
	renderStyle none +DONTSPLASH +DONTBLAST +THRUGHOST
	+SKYEXPLODE +NOTARGETSWITCH +RIPPER +DONTREFLECT
	states { spawn: TNT1 A 2	
			stop
		death: TNT1 A 0 // A_JumpIfCloser(450, ...)
			stop }}

			
// Xover's pit protection (Recycle Inhaler, Wing Spiral etc)
actor "XW Pit Protection Stack" : var8 { inventory.maxamount 6 }		
actor "XW Pit Protection" : item { states { pickup: TNT1 A 0 A_JumpIfInventory("XW Pit Protection Stack", 1, "refill")
	TNT1 A 0 A_SpawnItemEx("XW Pit Watcher")
	TNT1 A 0 ACS_NamedExecuteWithResult("core_monsterblockplayer",0,true)
	refill: TNT1 A 0 A_GiveInventory("XW Pit Protection Stack", 6)
		stop}}
			
actor "XW Pit Watcher" : Watcher {
	states { spawn: TNT1 A 0
		TNT1 A 2 
		TNT1 A 0 A_TakeFromTarget("XW Pit Protection Stack", 2)
		TNT1 A 0 A_JumpIfInTargetInventory("XW Pit Protection Stack", 1, "spawn")
		TNT1 A 0 A_GiveToTarget("XW Pit Protection Over")
		stop}}
	
actor "XW Pit Protection Over" : item { states { 
	pickup: TNT1 A 0 ACS_NamedExecuteWithResult("core_monsterblockplayer",0,false)
	stop}}