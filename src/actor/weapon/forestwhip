const int XW_FOREST_WHIP_RANGE = 300; // 225
const int XW_FOREST_WHIP_PART = XW_FOREST_WHIP_RANGE/8;
const int XW_FOREST_WHIP_RAYCAST = XW_FOREST_WHIP_RANGE/2;
const int XW_FOREST_WHIP_GAP = 40;

actor XWForestWhipWep : BaseXoverWep {
	weapon.slotNumber 4	
	inventory.icon "FRSTWHIP"	obituary "$OB_XWFORESTWHIP"	tag "$TAG_XWFORESTWHIP"
	states {
		noAmmo: XWAC P 0
			goto super::noAmmo	
		select: XWAC P 0 ACS_NamedExecuteWithResult("core_weaponcolor",6742)
			goto super::select
		ready: XWAC P 0
			goto super::ready
			
		fire: altfire:
			XWAC P 0 A_JumpIfInventory("Forest Whip Cooldown", 1, "ready")
			XWAC P 0 A_JumpIf(!CallACS("XW Ammo Check", 2), "noAmmo")
			XWAC P 1
			XWAC P 0 ACS_NamedExecuteAlways("XW Ammo Use", 0, 2)
			XWAC P 0 A_PlaySoundEx("FRSTWHIP","Weapon")
			
		whip00:
			XWAC P 0 A_SpawnItemEx("Forest Whip Peg Help", 5*cos(pitch), 8, 32+(5*sin(-pitch)), 60*cos(pitch), 0, 60*sin(-pitch))
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 1",0,0,0,0,0,0,0,SXF_TRANSFERPITCH)
			XWAC J 0 A_JumpIfInventory("PowerSpreadRune", 1, "whip01") goto whip20
		whip01:
			XWAC P 0 A_SpawnItemEx("Forest Whip Peg Help", 5*cos(pitch), 8, 32+(5*sin(-pitch)), 60*cos(pitch), 0, 60*sin(-pitch),20)
			XWAC P 0 A_SpawnItemEx("Forest Whip Peg Help", 5*cos(pitch), 8, 32+(5*sin(-pitch)), 60*cos(pitch), 0, 60*sin(-pitch),-20)
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 1",0,0,0,0,0,0,20,SXF_TRANSFERPITCH)
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 1",0,0,0,0,0,0,-20,SXF_TRANSFERPITCH)
		whip20:
			XWAC Q 2
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 2",0,0,0,0,0,0,0,SXF_TRANSFERPITCH)
			XWAC J 0 A_JumpIfInventory("PowerSpreadRune", 1, "whip21") goto whip30
		whip21:
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 2",0,0,0,0,0,0,20,SXF_TRANSFERPITCH)
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 2",0,0,0,0,0,0,-20,SXF_TRANSFERPITCH)
		whip30:
			XWAC Q 2
			XWAC P 0 A_SpawnItemEx("Forest Whip Bramble RayCast", 0, 8, 32, XW_FOREST_WHIP_RAYCAST*cos(pitch), 0, XW_FOREST_WHIP_RAYCAST*sin(-pitch))
			XWAC P 0 A_SpawnItemEx("Forest Whip Damager RayCast", 0, 8, 32, XW_FOREST_WHIP_RAYCAST*cos(pitch), 0, XW_FOREST_WHIP_RAYCAST*sin(-pitch), 0,SXF_TRANSFERPITCH )
			XWAC R 0 A_SpawnItemEx("__Forest Whip GFX 3",0,0,0,0,0,0,0,SXF_TRANSFERPITCH)
			XWAC J 0 A_JumpIfInventory("PowerSpreadRune", 1, "whip31") goto whip50
		whip31:
			XWAC P 0 A_SpawnItemEx("Forest Whip Bramble RayCast", 0, 8, 32, XW_FOREST_WHIP_RAYCAST*cos(pitch), 0, XW_FOREST_WHIP_RAYCAST*sin(-pitch),20)
			XWAC P 0 A_SpawnItemEx("Forest Whip Damager RayCast", 0, 8, 32, XW_FOREST_WHIP_RAYCAST*cos(pitch), 0, XW_FOREST_WHIP_RAYCAST*sin(-pitch),20,SXF_TRANSFERPITCH )
			XWAC P 0 A_SpawnItemEx("Forest Whip Bramble RayCast", 0, 8, 32, XW_FOREST_WHIP_RAYCAST*cos(pitch), 0, XW_FOREST_WHIP_RAYCAST*sin(-pitch),-20)
			XWAC P 0 A_SpawnItemEx("Forest Whip Damager RayCast", 0, 8, 32, XW_FOREST_WHIP_RAYCAST*cos(pitch), 0, XW_FOREST_WHIP_RAYCAST*sin(-pitch),-20,SXF_TRANSFERPITCH )
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 3",0,0,0,0,0,0,20,SXF_TRANSFERPITCH)
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 3",0,0,0,0,0,0,-20,SXF_TRANSFERPITCH)
		whip50:
			XWAC R 2
			XWAC R 0 A_SpawnItemEx("__Forest Whip GFX 4",0,0,0,0,0,0,0,SXF_TRANSFERPITCH)
			XWAC J 0 A_JumpIfInventory("PowerSpreadRune", 1, "whip51") goto whip60
		whip51:
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 4",0,0,0,0,0,0,20,SXF_TRANSFERPITCH)
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 4",0,0,0,0,0,0,-20,SXF_TRANSFERPITCH)
		whip60:
			XWAC R 2
			XWAC R 0 A_SpawnItemEx("__Forest Whip GFX 5",0,0,0,0,0,0,0,SXF_TRANSFERPITCH)
			XWAC J 0 A_JumpIfInventory("PowerSpreadRune", 1, "whip61") goto whip70
		whip61:
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 5",0,0,0,0,0,0,20,SXF_TRANSFERPITCH)
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 5",0,0,0,0,0,0,-20,SXF_TRANSFERPITCH)
		whip70:
			XWAC R 2
			XWAC R 0 A_SpawnItemEx("__Forest Whip GFX 6",0,0,0,0,0,0,0,SXF_TRANSFERPITCH)
			XWAC J 0 A_JumpIfInventory("PowerSpreadRune", 1, "whip71") goto end
		whip71:
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 6",0,0,0,0,0,0,20,SXF_TRANSFERPITCH)
			XWAC Q 0 A_SpawnItemEx("__Forest Whip GFX 6",0,0,0,0,0,0,-20,SXF_TRANSFERPITCH)
		end:		
			XWAC Q 5
			XWAC P 0 A_GiveInventory("Forest Whip Cooldown", 1)
			//XWAC P 12
			XWAC P 0 A_Refire
			goto ready}}
			
actor "Forest Whip Cooldown" : powerup { powerup.duration 12 }
//DamageType ForestWhipPeg { Factor 0 }

actor "Forest Whip Peg Help" : "XW Ray Cast" { 
	states { spawn: TNT1 A 0
		TNT1 AAAA 1 A_SpawnItemEx("ThunderClawPegHelper")
		stop }}
			
			// ################################ //
			//		 	  	WHIP    	 		//
			// ################################ //
			
// scalex ==> stores hitbox damage
// scaley ==> how much hitboxes to spawn are remaining plus 1 (scale == 0 causes issues ; current
// zandro version doesn't support the A_SetScale (scaleX, scaleY, pointer, usezero) signature
actor "Forest Whip Damager RayCast" : "XW Ray Cast" { -THRUGHOST 
	states {
		spawn: TNT1 A 0
			TNT1 A 1
		death: 
			TNT1 A 0 A_SetArg(0, CallACS("XW", XW_DIST_TO_TARGET, 0))
			TNT1 A 0 A_JumpIf(args[0] > XW_FOREST_WHIP_RANGE, "fixRange") // min(XW_FOREST_WHIP_RANGE, x)
			goto spawnTrail
		fixRange:
			TNT1 A 0 A_SetArg(0, XW_FOREST_WHIP_RANGE)
		spawnTrail:
			TNT1 A 0 A_SetScale(20+((args[0]*20)/XW_FOREST_WHIP_RANGE),
								(args[0]/XW_FOREST_WHIP_GAP)+1)
			TNT1 A 0 A_SpawnItemEx("Forest Whip Damager", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERPITCH | SXF_TRANSFERSCALE)
			stop }}

actor "Forest Whip Damager" : proj { 
	obituary "$OB_XWFORESTWHIP" damagetype "ForestWhip"
	radius 15 height 60 damage (scalex) +HITTRACER +DONTBLAST +DONTREFLECT states {
		spawn: TNT1 A 0
				goto checkNext
		// wait 1 tic on hit so FWhip invul has enough time to be granted
		crash: xdeath: 
			TNT1 A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_TARGET)	
			TNT1 A 0 A_GiveToTarget("Forest Whip Protection", 1)	
			TNT1 A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_TARGET)
		checkForLock:
			TNT1 A 0 A_JumpIf(CallACS("XW", XW_IS_LIVING_BEING, AAPTR_TRACER) && !CallACS("XW", XW_IS_SAME_TEAM), 1)
			goto checkNext			
			TNT1 A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_TARGET)	
			TNT1 A 0 A_SpawnItem("Forest Whip Lock Watcher")
			TNT1 A 0 A_ChangeFlag("NOINTERACTION", true) 
			TNT1 A 1 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_TARGET)
		death: checkNext:
			TNT1 A 0 A_JumpIf(scaley > 1, "spawnNext")
			goto stopTrail
		spawnNext:
			// Sets up information for the next damager to spawn
			TNT1 A 0 A_SetScale(
				20 + (((scaley-1)*XW_FOREST_WHIP_GAP*20)/XW_FOREST_WHIP_RANGE),
					scaley-1)
			ICES B 0 A_SpawnItemEx("Forest Whip Damager", cos(pitch)*-XW_FOREST_WHIP_GAP, 0, sin(-pitch)*-XW_FOREST_WHIP_GAP,
				0, 0, 0, 0, SXF_TRANSFERPITCH | SXF_TRANSFERSCALE )
			stop 
		stopTrail: TNT1 A 0
			stop }}
			
actor "Forest Whip Bramble RayCast" : "XW Ray Cast" { -DONTSPLASH
	states { spawn: TNT1 A 0
				TNT1 A 1
				stop
			death: TNT1 A 0 A_CheckFloor("summon")
				stop
			summon: TNT1 A 0 A_SpawnItemEx("Forest Whip Bramble")
				stop }}
				
actor "__Forest Whip GFX 1" : watcher { args 1 states {
	spawn: TNT1 A 0 nodelay A_SetScale(args[0], 1+(pitch/4))
		TNT1 A 0 A_SpawnItemEx("Forest Whip GFX",0,0,0,0,0,0,0,SXF_TRANSFERPITCH | SXF_TRANSFERSCALE)
			stop}}
actor "__Forest Whip GFX 2" : "__Forest Whip GFX 1" { args 2 }
actor "__Forest Whip GFX 3" : "__Forest Whip GFX 1" { args 3 }
actor "__Forest Whip GFX 4" : "__Forest Whip GFX 1" { args 4 }
actor "__Forest Whip GFX 5" : "__Forest Whip GFX 1" { args 5 }
actor "__Forest Whip GFX 6" : "__Forest Whip GFX 1" { args 6 }

actor "Forest Whip Protection" : PowerProtection { Powerup.Duration 4
	damagefactor "ForestWhip", 0.0 }		
		
actor "Forest Whip Lock Duration" : var8  { inventory.maxamount 300 }
actor "Forest Whip Punishment Curse" : varBool {}
actor "Forest Whip No GFX Repeat" : varBool {}

actor "Forest Whip Lock Watcher" : watcher { reactiontime 35 states {
	spawn: TNT1 A 0
		TNT1 A 0 A_JumpIfInTargetInventory("Forest Whip Lock Duration", 1, "end")
		TNT1 A 0 A_JumpIfInTargetInventory("Forest Whip No GFX Repeat", 1, 2)
		TNT1 A 0 A_SpawnItemEx("Forest Whip Strangler")
		TNT1 A 0 A_GiveToTarget("Forest Whip Punition", 1)
		TNT1 A 0 A_GiveToTarget("Forest Whip Punishment Curse", 1)
	getDunked:
		TNT1 A 1 A_GiveToTarget("Forest Whip Dunk")
		TNT1 A 0 A_GiveToTarget("Forest Whip Slam Check", 1)
		TNT1 A 0 A_JumpIfInTargetInventory("Forest Whip Punishment Curse", 1, 1)
		goto prepunish
		TNT1 A 0 A_JumpIf(!CallACS("core_targetexists"),"end")
		TNT1 A 0 A_Countdown
		goto getDunked
	death:
		TNT1 A 0 A_TakeFromTarget("Forest Whip Punishment Curse")
	prepunish:
		TNT1 A 0 A_TakeFromTarget("Forest Whip Lock Duration")
		TNT1 A 0
		stop}}
	
actor "Forest Whip Slam Check" : item { states {
	pickup: TNT1 A 0 A_JumpIf(velz >= 0, "punishMeIDeserveIt")
		stop
	punishMeIDeserveIt:
		TNT1 A 0 A_TakeInventory("Forest Whip Punishment Curse", 1)
		TNT1 A 0 ACS_NamedExecuteWithResult("XW", 7, 8) // Locker + effects
		stop}}
		
actor "Forest Whip Dunk" : item { states { pickup: TNT1 A 0 ThrustThingZ(0, 190, 1, 0) stop }}
actor "Forest Whip Punition" : item { states {
	pickup: TNT1 A 0 A_GiveInventory("Forest Whip Lock Duration", 6+((z-floorz)/12)) // min(formula, 137)
			stop}}
			
actor "Forest Whip Strangler" : watcher { args 0 states {
	spawn: TNT1 A 0 nodelay A_GiveToTarget("Forest Whip No GFX Repeat", 1)
	premain:
		TNT1 A 0 A_JumpIf(!CallACS("core_targetexists"),"end")
	main:
		TNT1 A 0 A_JumpIfInTargetInventory("Forest Whip Punishment Curse", 1, 2)
		TNT1 A 0 A_JumpIfInTargetInventory("TotalLockCount", 1, 1)
		goto vanish
		TNT1 A 0 A_GiveToTarget("Forest Whip Strangler I1", 1)
		TNT1 A 2 A_SetArg(0, args[0]+1)
		TNT1 A 0 A_JumpIf(args[0] == 2, "prealt")
		goto main		
	prealt:
		TNT1 I 0 A_JumpIf(!CallACS("core_targetexists"),"end")
	alt:
		TNT1 A 0 A_JumpIfInTargetInventory("Forest Whip Punishment Curse", 1, 2)
		TNT1 A 0 A_JumpIfInTargetInventory("TotalLockCount", 1, 1)
		goto vanish
		TNT1 A 0 A_GiveToTarget("Forest Whip Strangler I2", 1)
		TNT1 A 2 A_SetArg(0, args[0]-1)
		TNT1 A 0 A_JumpIf(!args[0], "premain")
		goto alt
	vanish:
		TNT1 A 0 A_TakeFromTarget("Forest Whip No GFX Repeat", 1)
		TNT1 A 4 A_GiveToTarget("Forest Whip Strangler I1", 1)
		TNT1 A 4 A_GiveToTarget("Forest Whip Strangler I2", 1)
		TNT1 A 4 A_GiveToTarget("Forest Whip Strangler I1", 1)
		stop}}
		
		
		
		
	
			// ################################ //
			//			   BRAMBLE				//
			// ################################ //	
		
actor "Forest Whip Bramble" : proj { +NOINTERACTION scale 3.0 xscale 4.0 +MOVEWITHSECTOR
	 +DONTSPLASH +DONTBLAST reactiontime 4 states {
	spawn: TNT1 A 0 nodelay A_PlaySoundEx("FRSTBRMB", "Weapon")
		TNT1 A 0 A_SpawnItemEx("Forest Whip Bramble Hit 1")
		XWAC ST 3
		TNT1 A 0 A_SpawnItemEx("Forest Whip Bramble Hit 2")
		XWAC UV 3
	wigglewiggle:
		TNT1 A 0 A_Countdown
		TNT1 A 0 A_SpawnItemEx("Forest Whip Bramble Hit 1")
		XWAC WX 3
		TNT1 A 0 A_SpawnItemEx("Forest Whip Bramble Hit 2")
		XWAC YZ 3
		loop
	death:
		TNT1 A 0 A_SpawnItemEx("Forest Whip Bramble Hit 1")
		XWAC WV 3
		TNT1 A 0 A_SpawnItemEx("Forest Whip Bramble Hit 2")
		XWAC UT 3
		TNT1 A 0 A_SpawnItemEx("Forest Whip Bramble Hit 1")
		XWAC S 3
		stop}}
		
		
actor "Forest Whip Bramble Hit 1" : proj { radius 50 height 128 +HITTRACER
	obituary "$OB_XWFORESTWHIPBRAMBLE" damagetype "ForestWhipBramble" damage (5) 
		states { spawn: TNT1 AA 0
			stop
		xdeath: crash: TNT1 A 0 A_JumpIf(CallACS("XW", XW_IS_SAME_TEAM), "end")
			TNT1 A 0 A_SpawnItemEx("Forest Whip Bramble SFX Summon")
			stop}}
			
actor "Forest Whip Bramble Hit 2" : "Forest Whip Bramble Hit 1" { damage (6) }
			
actor "Forest Whip Bramble SFX Summon" : watcher { states {
	spawn: TNT1 A 0 nodelay A_SpawnItemEx("Forest Whip Bramble SFX")
		stop}}
			
actor "Forest Whip Bramble SFX" : gfx { states {
	spawn: TNT1 A 0 nodelay A_PlaySoundEx("FRSTBRHT", "Weapon")
		stop}}

		
		
			// ################################ //
			//		 	 CLIENTSIDED    		//
			// ################################ //
			
// Whip body
actor "Forest Whip GFX" : gfx { states {
	spawn: TNT1 A 0 nodelay A_SetArg(0,scalex)
		TNT1 A 0 A_SetPitch((scaley-1)*4)
		TNT1 A 0 A_SetArg(2, 1)
		TNT1 A 0 A_JumpIf(args[0] < 4, "f123")
		goto f456
	f123: TNT1 A 0 A_JumpIf(args[0] == 1, "f1")
		goto f23
	f23: TNT1 A 0 A_JumpIf(args[0] == 2, "f2")
		goto f3
	f456: TNT1 A 0 A_JumpIf(args[0] == 6, "f6")
		goto f45
	f45: TNT1 A 0 A_JumpIf(args[0] == 5, "f5")
		goto f4
		
	f1: TNT1 A 0 A_SpawnItemEx("Forest Whip GFX 1", 3*(XW_FOREST_WHIP_PART*cos(pitch)), 8, 3*(XW_FOREST_WHIP_PART*sin(-pitch)))
		TNT1 A 0 A_SetArg(1, 2) goto parts
		
	f2: TNT1 A 0 A_SpawnItemEx("Forest Whip GFX 2",  6*(XW_FOREST_WHIP_PART*cos(pitch)), 8, 6*(XW_FOREST_WHIP_PART*sin(-pitch)))
		TNT1 A 0 A_SetArg(1, 5) goto parts
		
	f3: TNT1 A 0 A_SpawnItemEx("Forest Whip GFX 3", 7*(XW_FOREST_WHIP_PART*cos(pitch)), 8, 7*(XW_FOREST_WHIP_PART*sin(-pitch)))
		TNT1 A 0 A_SetArg(1, 6) goto parts
		
	f4: TNT1 A 0 A_SpawnItemEx("Forest Whip GFX 4", 6*(XW_FOREST_WHIP_PART*cos(pitch)), 8, 6*(XW_FOREST_WHIP_PART*sin(-pitch)))
		TNT1 A 0 A_SetArg(1, 5) goto parts
		
	f5: TNT1 A 0 A_SpawnItemEx("Forest Whip GFX 5", 5*(XW_FOREST_WHIP_PART*cos(pitch)), 8, 5*(XW_FOREST_WHIP_PART*sin(-pitch)))
		TNT1 A 0 A_SetArg(1, 4) goto parts
		
	f6: TNT1 A 0 A_SpawnItemEx("Forest Whip GFX 6", 2.5*(XW_FOREST_WHIP_PART*cos(pitch)), 8, 2.5*(XW_FOREST_WHIP_PART*sin(-pitch)))
		TNT1 A 0 A_SetArg(1, 1) goto parts
		
	parts: TNT1 A 0 A_SpawnItemEx("Forest Whip GFX Part", 
				args[2]*(cos(pitch)*XW_FOREST_WHIP_PART), 0, 
				args[2]*(sin(-pitch)*XW_FOREST_WHIP_PART))
			TNT1 A 0 A_SetArg(2, args[2]+1)
			TNT1 A 0 A_JumpIf(args[2] >= args[1], "end")
			loop}}
			
			
actor "Forest Whip GFX 1" : gfx { xscale 4.0 states { spawnFrame: XWAD A 0
	"----" A 2
	stop}}
actor "Forest Whip GFX 2" : "Forest Whip GFX 1" { states { spawnFrame: XWAD B 0
	goto super::spawnFrame+1}}
actor "Forest Whip GFX 3" : "Forest Whip GFX 1" { states { spawnFrame: XWAD C 0
	goto super::spawnFrame+1}}
actor "Forest Whip GFX 4" : "Forest Whip GFX 1" { states { spawnFrame: XWAD D 0
	goto super::spawnFrame+1}}
actor "Forest Whip GFX 5" : "Forest Whip GFX 1" { states { spawnFrame: XWAD E 0
	goto super::spawnFrame+1}}
actor "Forest Whip GFX 6" : "Forest Whip GFX 1" { states { spawnFrame: XWAD F 0
	goto super::spawnFrame+1}}
															
actor "Forest Whip GFX Part" : "Forest Whip GFX 1" { states { spawnFrame: XWAD G 0
	goto super::spawnFrame+1}}
															
															
actor "Forest Whip Strangler GFX 1" : gfx { +FORCEXYBILLBOARD scale 1.5 states {
	spawn: TNT1 A 0
		XWAD H 2
		stop}}
actor "Forest Whip Strangler GFX 2" : "Forest Whip Strangler GFX 1" { states {
	spawn: TNT1 A 0
		XWAD I 2
		stop}}
		
		
actor "Forest Whip Strangler I1" : item { states { 
	pickup: TNT1 A 0 A_SpawnItemEx("Forest Whip Strangler GFX 1", 0, 0, 12)
		stop}}
actor "Forest Whip Strangler I2" : item { states { 
	pickup: TNT1 A 0 A_SpawnItemEx("Forest Whip Strangler GFX 2", 0, 0, 12)
		stop}}
		
actor "Forest Whip Rock Smash" : gfx {
	states {
		spawn: 
			TNT1 A 0 nodelay A_SetArg(0,TID-6770)
			TNT1 A 0 A_SetArg(1, 12+(args[0]/7)) // z speed
			TNT1 A 0 A_SetArg(2, 2+(args[0]/25)) // xy speed
			TNT1 A 0 A_SetScale(2.5 + (args[0]/23))
			TNT1 A 0 A_SpawnItemEx("Forest Whip Rock 1", 32, 0, 0, args[2], 0, args[1], 36, SXF_TRANSFERSCALE)
			TNT1 A 0 A_SpawnItemEx("Forest Whip Rock 2", 32, 0, 0, args[2], 0, args[1], 108, SXF_TRANSFERSCALE)
			TNT1 A 0 A_SpawnItemEx("Forest Whip Rock 3", 32, 0, 0, args[2], 0, args[1], 180, SXF_TRANSFERSCALE)
			TNT1 A 0 A_SpawnItemEx("Forest Whip Rock 4", 32, 0, 0, args[2], 0, args[1], 252, SXF_TRANSFERSCALE)
			TNT1 A 0 A_SpawnItemEx("Forest Whip Rock 5", 32, 0, 0, args[2], 0, args[1], 324, SXF_TRANSFERSCALE)
			stop}}
			
actor "Forest Whip Rock 1" : gfx { +FORCEXYBILLBOARD states {
	spawn: XWAS E 0
	main: "----" AAAAA 4 ThrustThingZ(0,16,1,1)
	fade:
		"----" A 0 A_FadeOut(0.2)
		"----" A 4 ThrustThingZ(0,16,1,1)
		loop}}
		
actor "Forest Whip Rock 2" : "Forest Whip Rock 1" { states { spawn: XWAS F 0 
	goto main}}
actor "Forest Whip Rock 3" : "Forest Whip Rock 1" { states { spawn: XWAS G 0 
	goto main}}
actor "Forest Whip Rock 4" : "Forest Whip Rock 1" { states { spawn: XWAS H 0 
	goto main}}
actor "Forest Whip Rock 5" : "Forest Whip Rock 1" { states { spawn: XWAS I 0 
	goto main}}